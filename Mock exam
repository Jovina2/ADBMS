1. Create a database named CompanyDB

mysql> create database CompanyDB;
Query OK, 1 row affected (0.15 sec)

mysql> use CompanyDB;
Database changed

2. Create two tables:
  Employees (EmpID, Name, Department, Salary )
  Departments (DeptID, DeptName, Location)
  
mysql> create table Department(DeptID int primary key,Deptname varchar(20),Location varchar(20));
Query OK, 0 rows affected (0.95 sec)

mysql> CREATE TABLE Employees (EmpID INT,name VARCHAR(10),Department INT, Salary INT,FOREIGN KEY (Department) REFERENCES Department(DeptID));
Query OK, 0 rows affected (1.65 sec)

3.Insert at least  5 records into the  table employees and  3 records into the department table.

mysql> insert into Employees values(101,'Alice',1,5000);
Query OK, 1 row affected (0.10 sec)

mysql> insert into Employees values(102,'Bob',2,7000);
Query OK, 1 row affected (0.12 sec)

mysql> insert into Employees values(103,'David',3,5600);
Query OK, 1 row affected (0.11 sec)

mysql>  insert into Employees values(104,'Eva',1,8000);
Query OK, 1 row affected (0.11 sec)

mysql> insert into Employees values(105,'Job',2,6500);
Query OK, 1 row affected (0.09 sec)

mysql> select * from Employees;
+-------+-------+------------+--------+
| EmpID | name  | Department | Salary |
+-------+-------+------------+--------+
|   101 | Alice |          1 |   5000 |
|   102 | Bob   |          2 |   7000 |
|   103 | David |          3 |   5600 |
|   104 | Eva   |          1 |   8000 |
|   105 | Job   |          2 |   6500 |
+-------+-------+------------+--------+
5 rows in set (0.03 sec)

mysql> insert into Department values(1,'HR','NYC');
Query OK, 1 row affected (0.11 sec)

mysql> insert into Department values(2,'Finance','UK');
Query OK, 1 row affected (0.10 sec)

mysql> insert into Department values(3,'Sales','USA');
Query OK, 1 row affected (0.10 sec)

mysql> select * from Department;
+--------+----------+----------+
| DeptID | Deptname | Location |
+--------+----------+----------+
|      1 | HR       | NYC      |
|      2 | Finance  | UK       |
|      3 | Sales    | USA      |
+--------+----------+----------+

4.Write SQL queries to:

a) Select employees whose names start with ‘A’ using LIKE.

mysql>  select * from Employees where name like 'A%';
+-------+-------+------------+--------+
| EmpID | name  | Department | Salary |
+-------+-------+------------+--------+
|   101 | Alice |          1 |   5000 |
+-------+-------+------------+--------+
1 row in set (0.00 sec)

b) Display the total number of employees in each department using GROUP BY.

mysql> select Department,count(EmpID) AS TE from Employees group by Department;
+------------+----+
| Department | TE |
+------------+----+
|          1 |  2 |
|          2 |  2 |
|          3 |  1 |
+------------+----+
3 rows in set (0.00 sec)

c) Retrieve all employee details sorted by salary in descending order using ORDER BY.

mysql> select * from Employees order by Salary desc;
+-------+-------+------------+--------+
| EmpID | name  | Department | Salary |
+-------+-------+------------+--------+
|   104 | Eva   |          1 |   8000 |
|   102 | Bob   |          2 |   7000 |
|   105 | Job   |          2 |   6500 |
|   103 | David |          3 |   5600 |
|   101 | Alice |          1 |   5000 |
+-------+-------+------------+--------+
5 rows in set (0.00 sec)

d) Fetch employee names, their departments, and department locations using JOIN.

mysql> select Employees.name AS EmployeeName,Department.Deptname AS Department, Department.Location AS location from Employees JOIN Department ON Employees.Department=Department.DeptID;
+--------------+------------+----------+
| EmployeeName | Department | location |
+--------------+------------+----------+
| Alice        | HR         | NYC      |
| Eva          | HR         | NYC      |
| Bob          | Finance    | UK       |
| Job          | Finance    | UK       |
| David        | Sales      | USA      |
+--------------+------------+----------+
5 rows in set (0.00 sec)

e) Find employees earning more than the average salary using a SUBQUERY.

mysql> select name,Salary from Employees where Salary > (select avg(Salary) from Employees);
+------+--------+
| name | Salary |
+------+--------+
| Bob  |   7000 |
| Eva  |   8000 |
| Job  |   6500 |
+------+--------+
3 rows in set (0.00 sec)

f) Create a VIEW to display employees earning more than 55,000.

mysql> create view yy as select * from Employees where salary > 55000;
Query OK, 0 rows affected (0.17 sec)

mysql>  select * from yy;
Empty set (0.00 sec)


//VERIFIED
